apiVersion: apps/v1
kind: Ingress
metadata:
  name: nodejs-ingress
  namespace: nodejs
spec:
  rules:
  - host: nodejs.example.com
    http:
      paths:
      - backend:
          serviceName: nodejs-srv
          servicePort: 80
        path: /
---
apiVersion: v1
kind: Service
metadata:
  name: lbservice
spec:
  selector:
    app: nodejs
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
  loadbalancerIP: 192.168.0.101
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nodejs
  namespace: nodejs
  name: nodejs-srv
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
   - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: nodejs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nodejs
  name: nodejs
  namespace: nodejs
spec:
  selector:
    matchLabels:
      app: nodejs
  replicas: 5
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      hostNetwork: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nodejs
            topologyKey: failure-domain.beta.kubernetes.io/zone
      containers:
      - image: nodejs-app
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: "0.1"
            memory: "128M"
          limits:
            cpu: "0.9"
            memory: "128M"
        name: nodejs-pod
        ports:
        - containerPort: 80


---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nodejs-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nodejs
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: scale-up
spec:
  schedule: "0 9 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: hello
            image: autoscaler
            args:
            - /bin/bash
            - -c
            - kubectl scale --replicas=5 deployment/nodejs
          restartPolicy: OnFailure
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: scale-down
spec:
  schedule: "0 21 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: hello
            image: autoscaler
            args:
            - /bin/bash
            - -c
            - kubectl scale --replicas=1 deployment/nodejs
          restartPolicy: OnFailure
